% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/weighted_network_analysis.R
\name{weighted_network_analysis}
\alias{weighted_network_analysis}
\title{Weighted Network Analysis}
\usage{
weighted_network_analysis(
  data.grouped.evenDim = NULL,
  names_of_groups,
  data.unique = NULL,
  fun_list,
  g.interactome,
  quantile_critical_nodes,
  ...
)
}
\arguments{
\item{data.grouped.evenDim}{A list of data frames representing grouped data, with same numbero of genes. If `NULL`, data is grouped using `data.unique` and the specified parameters.}

\item{names_of_groups}{A character vector specifying the names of the groups for analysis.}

\item{data.unique}{A data frame with unique data used for grouping, if `data.grouped` is `NULL`. Default is `NULL`.}

\item{fun_list}{A list of functions for calculating network centralities.}

\item{g.interactome}{An igraph object representing the interactome network.}

\item{quantile_critical_nodes}{A numeric value specifying the quantile threshold for identifying critical nodes.}

\item{...}{Additional arguments passed to internal functions.}
}
\value{
A list containing:
\describe{
  \item{Centralities}{A list of centrality measures for weighted networks.}
  \item{CriticalNodes}{Lists of critical nodes (hubs and bottlenecks) in weighted networks.}
}
}
\description{
This function performs network analysis on weighted networks derived from grouped biological data. It calculates centralities, identifies hubs and bottlenecks, and analyzes centrality over quantiles for weighted networks.
}
\examples{
library(igraph)
filteredInteractome <- filter_interactome(interactome_hs,
                                          scores_threshold = c("experimental" = 0.15,
                                                               "database"    = 0.35))
g.interactome <- graph_from_edgelist(as.matrix(filteredInteractome[,3:4]), directed = FALSE)
# Example data
data.grouped <- list(Group1 = matrix(runif(2000), nrow = 200),
                      Group2 = matrix(runif(2000), nrow = 200))

G <- sample(names(V(g.interactome)), 200)
data.grouped <- lapply(data.grouped, function(x) {
  rownames(x) <- G
  return(x)
})
colnames(data.grouped$Group1) <- paste0("Group1_",1:10)
colnames(data.grouped$Group2) <- paste0("Group2_",1:10)
result <- weighted_network_analysis(data.grouped.evenDim = data.grouped,
                                    names_of_groups = c("Group1", "Group2"),
                                    fun_list = list(Degree = igraph::degree,
                                                    Betweenness = igraph::betweenness),
                                    g.interactome = g.interactome,
                                    quantile_critical_nodes = 0.8)


}
