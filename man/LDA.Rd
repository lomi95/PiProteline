% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LDA.R
\name{LDA}
\alias{LDA}
\title{Linear Discriminant Analysis (LDA)}
\usage{
LDA(
  dataset,
  names_of_groups,
  gene_column,
  ignoreCase = T,
  significance.LDA = 0.05,
  correction.LDA = "BH",
  pos.vectors_groups = NULL,
  boundFC = c(-2, 2),
  MDS = T
)
}
\arguments{
\item{dataset}{The dataset to analyze, where rows represent features (e.g., genes, proteins) and columns represent samples.}

\item{names_of_groups}{A character vector specifying the names of the groups present in the column names of the dataset. Ignored if `pos.vectors_groups` is provided.}

\item{gene_column}{The position of the column containing gene identifiers. If set to 0, no gene column is assumed.}

\item{ignoreCase}{Logical, if TRUE (default), the matching of `names_of_groups` is case insensitive.}

\item{significance.LDA}{Numeric, the significance threshold for feature p-values. Default is 0.05.}

\item{correction.LDA}{A character string specifying the p-value correction method. Default is "BH" (Benjamini-Hochberg). See `p.adjust.methods` for more options.}

\item{pos.vectors_groups}{A list where each element contains column indices for a group of samples. If provided, `names_of_groups` is ignored.}

\item{boundFC}{A numeric vector specifying the bounds for highlighting fold changes in Volcano plots. Default is c(-2, 2).}

\item{MDS}{Logical, if TRUE (default), computes random forest classification and Multi-Dimensional Scaling (MDS).}
}
\value{
A list containing:
\item{dataset.LDA}{The filtered dataset with significant features.}
\item{features_p.values}{A dataframe with p-values and adjusted p-values for the features.}
\item{features_updown}{A matrix indicating which features are up- or down-regulated in each group.}
\item{mds.plot}{MDS plot if `MDS = TRUE`.}
\item{VolcanoPlots}{A list of Volcano plots for pairwise group comparisons.}
}
\description{
This function performs linear discriminant analysis on a dataset, identifying significant features across multiple groups. It can also compute random forest classification and Multi-Dimensional Scaling (MDS) if specified.
}
\examples{
dataset <- matrix(rnorm(100), nrow = 20)
colnames(dataset) <- c("control_1", "control_2", "treatment_1", "treatment_2", "control_3")
rownames(dataset) <- paste("gene", 1:20, sep = "_")
LDA(dataset, names_of_groups = c("control", "treatment"), gene_column = 0)

}
